{"version":3,"file":"BaseVirtualScroller.2f19f0d8.js","sources":["../../src/components/BaseVirtualScroller.vue"],"sourcesContent":["<template>\r\n    <div\r\n        class=\"viewport\"\r\n        ref=\"viewportElement\"\r\n        @scroll=\"runScroller\"\r\n        :style=\"{ height: viewportHeight + 'px' }\">\r\n        <div :style=\"{ height: topPaddingHeight + 'px' }\"></div>\r\n        <template\r\n            v-for=\"(item, itemIndex) in sources\"\r\n            :key=\"`virtual-item-${itemIndex}-${item[idProp]}`\">\r\n            <slot :item=\"item\" v-if=\"$slots.template\" name=\"template\"></slot>\r\n            <div\r\n                class=\"virtual-item\"\r\n                :style=\"{ height: itemHeight + 'px' }\"\r\n                v-else>\r\n                {{ item[textProp] }}\r\n            </div>\r\n        </template>\r\n        <div :style=\"{ height: bottomPaddingHeight + 'px' }\"></div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { ref } from 'vue';\r\nexport default {\r\n    props: {\r\n        start: {\r\n            type: Number,\r\n            default: 0,\r\n            validator: function (value) {\r\n                return value >= 0;\r\n            },\r\n        },\r\n        itemHeight: {\r\n            type: Number,\r\n            default: 20,\r\n            validator: function (value) {\r\n                return value >= 1;\r\n            },\r\n        },\r\n        amount: {\r\n            type: Number,\r\n            default: 5,\r\n            validator: function (value) {\r\n                return value >= 1;\r\n            },\r\n        },\r\n        tolerance: {\r\n            type: Number,\r\n            default: 2,\r\n            validator: function (value) {\r\n                return value >= 1;\r\n            },\r\n        },\r\n        items: {\r\n            type: Array,\r\n            default: () => [],\r\n        },\r\n        idProp: {\r\n            type: String,\r\n            default: 'index',\r\n        },\r\n        textProp: {\r\n            type: String,\r\n            default: 'text',\r\n        },\r\n    },\r\n    setup(props) {\r\n        let viewportHeight = props.amount * props.itemHeight;\r\n        let totalHeight = props.items.length * props.itemHeight;\r\n        const bufferedItems = props.amount + 2 * props.tolerance;\r\n        let topPaddingHeight = ref(\r\n            (props.start - props.tolerance) * props.itemHeight\r\n        );\r\n        let bottomPaddingHeight = ref(totalHeight - topPaddingHeight.value);\r\n        let sources = ref([]);\r\n\r\n        const getData = (offset, limit) => {\r\n            let data = [];\r\n            const start = Math.max(offset, 0);\r\n            const end = Math.min(offset + limit - 1, props.items.length);\r\n            if (start <= end) {\r\n                data = props.items.slice(start, end);\r\n            }\r\n            return data;\r\n        };\r\n\r\n        const runScroller = ({ target: { scrollTop } }) => {\r\n            const index = Math.floor(\r\n                scrollTop / props.itemHeight - props.tolerance\r\n            );\r\n            sources.value = getData(index, bufferedItems);\r\n            topPaddingHeight.value = Math.max(index * props.itemHeight, 0);\r\n            bottomPaddingHeight.value = Math.max(\r\n                totalHeight -\r\n                    topPaddingHeight.value -\r\n                    sources.value.length * props.itemHeight,\r\n                0\r\n            );\r\n        };\r\n\r\n        if (props.amount + props.tolerance >= props.items.length) {\r\n            if (props.amount >= props.items.length) {\r\n                viewportHeight = totalHeight;\r\n            }\r\n            topPaddingHeight.value = bottomPaddingHeight.value = 0;\r\n            sources.value = props.items;\r\n        } else {\r\n        }\r\n        runScroller({ target: { scrollTop: 0 } });\r\n\r\n        return {\r\n            viewportHeight,\r\n            topPaddingHeight,\r\n            bottomPaddingHeight,\r\n            runScroller,\r\n            sources,\r\n        };\r\n    },\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n.viewport {\r\n    overflow-y: auto;\r\n}\r\n</style>\r\n"],"names":[],"mappings":"oIAuBA,SACI,MAAO,CACH,MAAO,CACH,KAAM,OACN,QAAS,EACT,UAAW,SAAU,EAAO,CACxB,MAAO,IAAS,IAGxB,WAAY,CACR,KAAM,OACN,QAAS,GACT,UAAW,SAAU,EAAO,CACxB,MAAO,IAAS,IAGxB,OAAQ,CACJ,KAAM,OACN,QAAS,EACT,UAAW,SAAU,EAAO,CACxB,MAAO,IAAS,IAGxB,UAAW,CACP,KAAM,OACN,QAAS,EACT,UAAW,SAAU,EAAO,CACxB,MAAO,IAAS,IAGxB,MAAO,CACH,KAAM,MACN,QAAS,IAAM,IAEnB,OAAQ,CACJ,KAAM,OACN,QAAS,SAEb,SAAU,CACN,KAAM,OACN,QAAS,SAGjB,MAAM,EAAO,CACT,GAAI,GAAiB,EAAM,OAAS,EAAM,WACtC,EAAc,EAAM,MAAM,OAAS,EAAM,WAC7C,KAAM,GAAgB,EAAM,OAAS,EAAI,EAAM,UAC/C,GAAI,GAAmB,EAClB,GAAM,MAAQ,EAAM,WAAa,EAAM,YAExC,EAAsB,EAAI,EAAc,EAAiB,OACzD,EAAU,EAAI,IAElB,KAAM,GAAU,CAAC,EAAQ,IAAU,CAC/B,GAAI,GAAO,GACX,KAAM,GAAQ,KAAK,IAAI,EAAQ,GACzB,EAAM,KAAK,IAAI,EAAS,EAAQ,EAAG,EAAM,MAAM,QACrD,MAAI,IAAS,GACT,GAAO,EAAM,MAAM,MAAM,EAAO,IAE7B,GAGL,EAAc,CAAC,CAAE,OAAQ,CAAE,gBAAkB,CAC/C,KAAM,GAAQ,KAAK,MACf,EAAY,EAAM,WAAa,EAAM,WAEzC,EAAQ,MAAQ,EAAQ,EAAO,GAC/B,EAAiB,MAAQ,KAAK,IAAI,EAAQ,EAAM,WAAY,GAC5D,EAAoB,MAAQ,KAAK,IAC7B,EACI,EAAiB,MACjB,EAAQ,MAAM,OAAS,EAAM,WACjC,IAIR,MAAI,GAAM,OAAS,EAAM,WAAa,EAAM,MAAM,QAC1C,GAAM,QAAU,EAAM,MAAM,QAC5B,GAAiB,GAErB,EAAiB,MAAQ,EAAoB,MAAQ,EACrD,EAAQ,MAAQ,EAAM,OAG1B,EAAY,CAAE,OAAQ,CAAE,UAAW,KAE5B,CACH,iBACA,mBACA,sBACA,cACA,yDAhHJ,iBACC,sBACA,4PAK4B,0CAAlB,6BAEH,IAAK,EACJ,6BAEO"}